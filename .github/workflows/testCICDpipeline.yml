name: CI/CD Pipeline
permissions:
  security-events: write
  actions: read
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm ci

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Lint frontend
        run: npm run lint
        
      - name: Build frontend
        run: npm run build

      - name: Run frontend tests
        run: npm test || echo "No frontend tests defined."

      - name: Run backend tests
        run: |
          cd backend
          npm test || echo "No backend tests defined."

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: |
            build/
            dist/
          retention-days: 7

  security-scan:
    name: Security Scanning
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Run npm audit (frontend)
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Run npm audit (backend)
        run: |
          cd backend
          npm audit --audit-level=high
        continue-on-error: true

      - name: OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@v2.7.2
        with:
          project: 'Secure Voting System'
          path: '.'
          format: 'HTML'
          args: >
            --failOnCVSS 7

      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: ${{ github.workspace }}/dependency-check-report.html
          retention-days: 30

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          output: 'trivy-results.json'
          format: 'json'

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-results.json
          retention-days: 30

  analyze:
    name: CodeQL Analysis
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"

  deploy:
    name: Deploy
    needs: [security-scan, analyze]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: build/
